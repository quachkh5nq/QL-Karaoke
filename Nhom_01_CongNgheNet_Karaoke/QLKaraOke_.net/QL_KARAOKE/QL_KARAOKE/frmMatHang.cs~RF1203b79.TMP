using QL_KARAOKE.DB;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace QL_KARAOKE
{
    public partial class frmMatHang : Form
    {
        public frmMatHang()
        {
            InitializeComponent();
        }

        private KARAOKE_DatabaseDataContext db;
        private string nhanvien = "admin";
        private DataGridViewRow r;
        private void frmMatHang_Load(object sender, EventArgs e)
        {
            db = new KARAOKE_DatabaseDataContext();
            ShowData();
            //chỉnh kích thước ô
            dgvMatHang.Columns["id"].Width = 100;
            dgvMatHang.Columns["TenDVT"].Width = 100;
            dgvMatHang.Columns["DonGiaBan"].Width = 100;
            dgvMatHang.Columns["TenMatHang"].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;
            //căn giữa
            dgvMatHang.Columns["id"].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;
            dgvMatHang.Columns["DonGiaBan"].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;
            dgvMatHang.Columns["TenDVT"].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;
            //dgvMatHang.Columns["TenMatHang"].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;

            //Đặt lại tên cột
            dgvMatHang.Columns["ID"].HeaderText = "Mã Hàng";
            dgvMatHang.Columns["TenDVT"].HeaderText = "Đơn Vị Tính";
            dgvMatHang.Columns["DongiaBan"].HeaderText = "Đơn Giá Bán";
            dgvMatHang.Columns["TenMatHang"].HeaderText = "Tên Mặt Hàng";

            //đỗ dữ liệu cho cbb

            cbbDVT.DataSource = db.DonViTinhs;
            cbbDVT.DisplayMember = "TenDVT";//thuộc tính hiển thị
            cbbDVT.ValueMember = "ID";//Giá trị hiển thị ngầm
            cbbDVT.SelectedIndex = -1;
        }

        private void ShowData()
        {
            var rs = from h in db.MatHangs
                     join d in db.DonViTinhs on h.DVT equals d.ID
                     select new
                     {
                         h.ID,
                         h.TenMatHang,
                         d.TenDVT,
                         h.DonGiaBan
                     };
            dgvMatHang.DataSource = rs;
        }

        private void btnThem_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrEmpty(txtTenMatHang.Text))
            {
                MessageBox.Show("Vui lòng nhập tên mặt hàng", "Ràng buộc dữ liệu", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtTenMatHang.Select();//đưa con trỏ chuột vào ô text
                return;
            }

            if(cbbDVT.SelectedIndex == -1)
            {
                MessageBox.Show("Vui lòng chọn đơn vị tính", "Ràng buộc dữ liệu", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            if (string.IsNullOrEmpty(txtDonGiaBan.Text))
            {
                MessageBox.Show("Vui lòng nhập đơng giá bán", "Ràng buộc dữ liệu", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtDonGiaBan.Select();
                return;
            }
            var mh = new MatHang();
            mh.TenMatHang = txtTenMatHang.Text;
            mh.DVT = int.Parse(cbbDVT.SelectedValue.ToString());//trong csdl là int  mà giá trị nhận đc là string nên ép kiểu sang int
            mh.DonGiaBan = int.Parse(txtDonGiaBan.Text);
            mh.NgayTao = DateTime.Now;
            mh.NguoiTao = nhanvien;

            db.MatHangs.InsertOnSubmit(mh);
            db.SubmitChanges();
            ShowData();

            MessageBox.Show("Thêm mới mặt hàng thành công","Successfully",MessageBoxButtons.OK,MessageBoxIcon.Information);

            //làm mới giá trị 
            txtDonGiaBan.Text = "0";
            txtTenMatHang.Text = null;
            cbbDVT.SelectedIndex = -1;//không chọn đơn vị tính nào

        }

        private void txtDonGiaBan_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsControl(e.KeyChar) && !char.IsDigit(e.KeyChar))//chỉ cho phép là số tự nhiên
            {
                e.Handled = true;
            }
        }

        private void btnSua_Click(object sender, EventArgs e)
        {
            var mh = db.MatHangs.SingleOrDefault(x => x.ID == int.Parse(r.Cells["ID"].Value.ToString()));

            if (string.IsNullOrEmpty(txtTenMatHang.Text))
            {
                MessageBox.Show("Vui lòng nhập tên mặt hàng", "Ràng buộc dữ liệu", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtTenMatHang.Select();//đưa con trỏ chuột vào ô text
                return;
            }

            if (cbbDVT.SelectedIndex == -1)
            {
                MessageBox.Show("Vui lòng chọn đơn vị tính", "Ràng buộc dữ liệu", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            if (string.IsNullOrEmpty(txtDonGiaBan.Text))
            {
                MessageBox.Show("Vui lòng nhập đơng giá bán", "Ràng buộc dữ liệu", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtDonGiaBan.Select();
                return;
            }

            mh.TenMatHang = txtTenMatHang.Text;
            mh.DonGiaBan = int.Parse(txtDonGiaBan.Text);
            mh.DVT = int.Parse(cbbDVT.SelectedValue.ToString());

            mh.NgayCapNhat = DateTime.Now;
            mh.NguoiCapNhat = nhanvien;

            db.SubmitChanges();
            ShowData();
            MessageBox.Show("Cập nhật mặt hàng thành công", "Successfully", MessageBoxButtons.OK, MessageBoxIcon.Information);

            txtTenMatHang.Text = null;
            txtDonGiaBan.Text = "0";
            cbbDVT.SelectedIndex = -1;
        }

        private void dgvMatHang_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0 )
            {
                r = dgvMatHang.Rows[e.RowIndex];//xác định được 1 hàng
                //lấy giá trị
                txtTenMatHang.Text = r.Cells["TenMatHang"].Value.ToString();
                txtDonGiaBan.Text = r.Cells["DonGiaBan"].Value.ToString();
                cbbDVT.Text = r.Cells["TenDVT"].Value.ToString();
            }
        }

        private void btnXoa_Click(object sender, EventArgs e)
        {
            if(r == null)
            {
                MessageBox.Show("Vui lòng chọn mặt hàng cần xóa", "Chú ý!", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }
            if (MessageBox.Show("Bạn có muốn xóa mặt hàng "+r.Cells["TenMatHang"].Value.ToString()+"?","Xác nhận xóa mặt hàng",
                MessageBoxButtons.YesNo,MessageBoxIcon.Question) == DialogResult.Yes
                )
            {
                try
                {
                    var mh = db.MatHangs.SingleOrDefault(x => x.ID == int.Parse(r.Cells["id"].Value.ToString()));
                    db.MatHangs.DeleteOnSubmit(mh);
                    MessageBox.Show("Xóa mặt hàng thành công!", "Successfully", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    db.SubmitChanges();
                    ShowData();
                    return;
                }
                catch
                {
                    MessageBox.Show("Xóa mặt hàng thất bại!", "Failed", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
        }
    }
}
